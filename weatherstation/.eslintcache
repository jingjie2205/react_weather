[{"D:\\react_weather\\weatherstation\\src\\index.js":"1","D:\\react_weather\\weatherstation\\src\\reportWebVitals.js":"2","D:\\react_weather\\weatherstation\\src\\App.js":"3","D:\\react_weather\\weatherstation\\src\\components\\Home.js":"4","D:\\react_weather\\weatherstation\\src\\components\\Paper_info.js":"5","D:\\react_weather\\weatherstation\\src\\components\\NavBar.js":"6","D:\\react_weather\\weatherstation\\src\\components\\CovidHome.js":"7","D:\\react_weather\\weatherstation\\src\\components\\Statusbox.js":"8","D:\\react_weather\\weatherstation\\src\\components\\Table.js":"9","D:\\react_weather\\weatherstation\\src\\components\\Graph.js":"10","D:\\react_weather\\weatherstation\\src\\components\\Covidgraph.js":"11"},{"size":534,"mtime":1610720370834,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1610711958088,"results":"14","hashOfConfig":"13"},{"size":759,"mtime":1611296853632,"results":"15","hashOfConfig":"13"},{"size":4126,"mtime":1611298517721,"results":"16","hashOfConfig":"13"},{"size":902,"mtime":1611301494588,"results":"17","hashOfConfig":"13"},{"size":627,"mtime":1611294860898,"results":"18","hashOfConfig":"13"},{"size":5514,"mtime":1611299252049,"results":"19","hashOfConfig":"13"},{"size":629,"mtime":1611257592089,"results":"20","hashOfConfig":"13"},{"size":516,"mtime":1611257592089,"results":"21","hashOfConfig":"13"},{"size":4236,"mtime":1611257592087,"results":"22","hashOfConfig":"13"},{"size":1380,"mtime":1611257592087,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ui54jj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"D:\\react_weather\\weatherstation\\src\\index.js",[],["49","50"],"D:\\react_weather\\weatherstation\\src\\reportWebVitals.js",[],"D:\\react_weather\\weatherstation\\src\\App.js",["51","52"],"D:\\react_weather\\weatherstation\\src\\components\\Home.js",["53","54"],"D:\\react_weather\\weatherstation\\src\\components\\Paper_info.js",["55","56","57"],"D:\\react_weather\\weatherstation\\src\\components\\NavBar.js",[],"D:\\react_weather\\weatherstation\\src\\components\\CovidHome.js",["58","59","60"],"D:\\react_weather\\weatherstation\\src\\components\\Statusbox.js",[],"D:\\react_weather\\weatherstation\\src\\components\\Table.js",[],"D:\\react_weather\\weatherstation\\src\\components\\Graph.js",["61"],"import React , { useState, useEffect } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport moment from 'moment';\r\n\r\nfunction Graph({state , country}) {\r\n    const confirmed = [];\r\n    const active = [];\r\n    const recovered = [];\r\n    const deaths = [];\r\n    const dates =[];\r\n    const [cases, setCases] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getcountry = async () => {\r\n            await fetch (`https://api.covid19api.com/total/dayone/country/${country}`)\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    setCases(data);\r\n            });\r\n        };\r\n        \r\n        getcountry();\r\n    }, [country]);\r\n\r\n    cases.map( num => {\r\n        confirmed.push(num.Confirmed);\r\n        active.push(num.Active);\r\n        recovered.push(num.Recovered);\r\n        deaths.push(num.Deaths);\r\n        var date = moment(num.Date).format(\"D MMM\");\r\n        dates.push(date);\r\n    })\r\n    \r\n    if(state === 'Confirmed') {\r\n        return (\r\n            <div>\r\n                <Line \r\n                data = {{\r\n                    labels: dates,\r\n                    datasets: [{\r\n                        label: \"Total Cases\",\r\n                        data : confirmed,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height = {570}\r\n                // width = {500}\r\n                options = {{\r\n                    maintainAspectRatio: false,\r\n                }}/>\r\n            </div>\r\n        )\r\n    } else if (state === 'Active'){\r\n        return (\r\n            <div>\r\n                <Line \r\n                data = {{\r\n                    labels: dates,\r\n                    datasets: [{\r\n                        label: \"Total Active\",\r\n                        data : active,\r\n                        backgroundColor: [\r\n                            'rgba(255, 255, 0, 0.4)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 255, 0, 1)',\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height = {570}\r\n                // width = {500}\r\n                options = {{\r\n                    maintainAspectRatio: false,\r\n                }}/>\r\n            </div>\r\n        )\r\n    } else if (state === 'Recovered') {\r\n        return (\r\n            <div>\r\n                <Line \r\n                data = {{\r\n                    labels: dates,\r\n                    datasets: [{\r\n                        label: \"Total Recovered\",\r\n                        data : recovered,\r\n                        backgroundColor: [\r\n                            'rgba(0, 255, 0, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(0, 255, 0, 0.2)',\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height = {570}\r\n                // width = {500}\r\n                options = {{\r\n                    maintainAspectRatio: false,\r\n                }}/>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Line \r\n                data = {{\r\n                    labels: dates,\r\n                    datasets: [{\r\n                        label: \"Total Deaths\",\r\n                        data : deaths,\r\n                        backgroundColor: [\r\n                            'rgba(128, 0, 0, 0.5)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(128, 0, 0, 0.5)',\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height = {570}\r\n                // // width = {500}\r\n                options = {{\r\n                    maintainAspectRatio: false,\r\n                }}/>\r\n            </div>\r\n        )\r\n    }\r\n  \r\n}\r\n\r\nexport default Graph\r\n","D:\\react_weather\\weatherstation\\src\\components\\Covidgraph.js",["62"],"import React from 'react'\r\nimport \"./style/Covidgraph.css\"\r\nimport { Line } from 'react-chartjs-2'\r\nimport useSwr from \"swr\";\r\nimport moment from 'moment';\r\n\r\nconst Covidgraph = () => {\r\n    const url = \"https://api.covid19api.com/country/singapore/status/confirmed\";\r\n    const confirmed = [];\r\n    const dates = [];\r\n\r\n    const fetcher = (...args) => fetch(...args).then(response => response.json()); //fetch api\r\n    const {data, error} = useSwr(url, fetcher);\r\n    const datas = data && !error ? data:[];\r\n\r\n    datas.map( data => {\r\n        confirmed.push(data.Cases);\r\n        var date = moment(data.Date).format(\"D MMM\");\r\n        dates.push(date);\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Line \r\n            data = {{\r\n                labels: dates,\r\n                datasets: [{\r\n                    label: \"Total Cases\",\r\n                    data : confirmed,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                    ],\r\n                    borderWidth: 1\r\n                }]\r\n            }}\r\n            height = {600}\r\n            width = {500}\r\n            options = {{\r\n                maintainAspectRatio: false,\r\n            }}/>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Covidgraph",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":10,"column":34,"nodeType":"69","messageId":"70","endLine":10,"endColumn":40},{"ruleId":"72","severity":1,"message":"73","line":79,"column":33,"nodeType":"74","endLine":79,"endColumn":108},{"ruleId":"75","severity":1,"message":"76","line":97,"column":29,"nodeType":"74","endLine":99,"endColumn":45},{"ruleId":"67","severity":1,"message":"77","line":2,"column":16,"nodeType":"69","messageId":"70","endLine":2,"endColumn":27},{"ruleId":"67","severity":1,"message":"78","line":2,"column":29,"nodeType":"69","messageId":"70","endLine":2,"endColumn":39},{"ruleId":"72","severity":1,"message":"73","line":13,"column":17,"nodeType":"74","endLine":13,"endColumn":91},{"ruleId":"67","severity":1,"message":"79","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":14},{"ruleId":"67","severity":1,"message":"80","line":8,"column":10,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"67","severity":1,"message":"81","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":25,"column":20,"nodeType":"84","messageId":"85","endLine":25,"endColumn":22},{"ruleId":"82","severity":1,"message":"83","line":16,"column":21,"nodeType":"84","messageId":"85","endLine":16,"endColumn":23},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Paper_info must be in PascalCase or SCREAMING_SNAKE_CASE","'CardContent' is defined but never used.","'Typography' is defined but never used.","'moment' is defined but never used.","'Line' is defined but never used.","'Covidgraph' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]